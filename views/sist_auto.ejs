<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <title>SIST, AUTO — Asignación automática</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <link href="/static/css/styles.css" rel="stylesheet">
</head>
<body class="bg-light">
  <%- include('partials/navbar') %>



<main class="container py-3">
  <div class="card shadow-sm mb-3">
    <div class="card-body">
      <div class="d-flex flex-wrap gap-2 align-items-end">
        <div>
          <h5 class="mb-1">Asignación automática</h5>
          <div class="text-muted small">
            Muestra solo los <strong>despachos sin pedidor</strong> que fueron asignados automáticamente.
          </div>
        </div>

        <div class="ms-auto"></div>

        <form id="form-auto" class="row g-2">
          <div class="col-12 col-md-6">
            <label class="form-label mb-1">Pedidores (coma separados)</label>
            <input type="text" class="form-control" id="auto-pedidores" placeholder="Ana,Beto,Cami">
            <div class="form-text">Si lo dejas vacío, usa las claves existentes de <code>assigned</code> como lista.</div>
          </div>
          <div class="col-6 col-md-2">
            <label class="form-label mb-1">Tope por pedidor</label>
            <input type="number" min="1" max="100" class="form-control" id="auto-limit" value="<%= limit || 10 %>">
          </div>
          <div class="col-6 col-md-4 d-flex align-items-end gap-2">
            <button type="submit" class="btn btn-primary">
              <i class="bi bi-robot"></i> Ejecutar asignación
            </button>
            <button type="button" id="btn-clear" class="btn btn-outline-danger">
              <i class="bi bi-trash"></i> Limpiar log
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Tarjetas -->
  <div class="row g-3">
    <% if (!(cards||[]).length) { %>
      <div class="col-12">
        <div class="alert alert-secondary mb-0">
          No hay asignaciones automáticas registradas todavía.
        </div>
      </div>
    <% } %>

    <% (cards || []).forEach(c => { %>
      <div class="col-12 col-md-6 col-lg-4">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-start">
              <div>
                <div class="text-uppercase text-muted small">Despacho</div>
                <div class="fw-bold fs-5"><%= c.despacho %></div>
              </div>
              <span class="badge text-bg-info">Auto</span>
            </div>

            <hr class="my-2">

            <div class="mb-2">
              <div class="text-muted small">Pedidor</div>
              <div class="fw-semibold"><%= c.pedidor %></div>
            </div>

            <div class="mb-2">
              <div class="text-muted small">Asignado</div>
              <div><i class="bi bi-clock"></i> <%= c.tsFmt %></div>
            </div>

            <div class="mb-2">
              <div class="text-muted small">ETA</div>
              <div><%= c.eta || "—" %></div>
            </div>
          </div>
        </div>
      </div>
    <% }) %>
  </div>
</main>

<div id="toastContainer" class="toast-container position-fixed bottom-0 end-0 p-3"></div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" defer></script>
<script>
  // Mini toast
  function toast(msg, tone="primary"){
    const cont = document.getElementById("toastContainer");
    const el = document.createElement("div");
    el.className = "toast align-items-center text-bg-" + tone + " border-0";
    el.innerHTML = '<div class="d-flex"><div class="toast-body">'+msg+'</div><button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button></div>';
    cont.appendChild(el);
    const t = new bootstrap.Toast(el,{delay:1800}); t.show();
    el.addEventListener("hidden.bs.toast", ()=> el.remove());
  }

  // Ejecutar auto-asignación (envía POST con query params que el server espera)
  document.getElementById("form-auto").addEventListener("submit", async (e)=>{
    e.preventDefault();
    const ped = document.getElementById("auto-pedidores").value.trim();
    const limit = document.getElementById("auto-limit").value || "10";
    const qs = new URLSearchParams();
    if (ped) qs.set("pedidores", ped);
    qs.set("limit", limit);

    const btn = e.submitter; if (btn) { btn.disabled = true; btn.classList.add("disabled"); }
    try {
      const r = await fetch("/sist/auto/run?"+qs.toString(), { method:"POST" });
      if (!r.ok) throw new Error("HTTP "+r.status);
      toast("Asignación ejecutada", "success");
      setTimeout(()=> location.reload(), 600);
    } catch (err) {
      console.error(err);
      toast("No se pudo ejecutar la asignación", "danger");
    } finally {
      if (btn) { btn.disabled = false; btn.classList.remove("disabled"); }
    }
  });

  // Limpiar log
  document.getElementById("btn-clear").addEventListener("click", async ()=>{
    if (!confirm("¿Limpiar el log de asignaciones automáticas?")) return;
    try {
      const r = await fetch("/sist/auto/clear", { method:"POST" });
      if (!r.ok) throw new Error("HTTP "+r.status);
      toast("Log limpiado", "secondary");
      setTimeout(()=> location.reload(), 400);
    } catch(err) {
      console.error(err);
      toast("No se pudo limpiar el log", "danger");
    }
  });
</script>
</body>
</html>
